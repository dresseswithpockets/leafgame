[gd_resource type="Shader" format=2]

[resource]
code = "shader_type spatial;
render_mode cull_disabled;

uniform float sway = 1.14;
uniform float sway_ = 0.34;
uniform float sway_pow = 1.3;
uniform float sway_noise_sampeling_scale = 0.12;
uniform float sway_time_scale = 0.2;
uniform vec3 sway_dir = vec3(1.0,0.0,1.0);
uniform sampler2D sway_noise; //noise with with and height 1000

uniform float metallic;
uniform sampler2D albedo : hint_albedo;
uniform vec4 color : hint_color;

float sclamp(float f,float sc){
    return clamp(((f-0.5)*sc)+0.5,0.0,1.0);
}

void fragment() {
    METALLIC = metallic;
    vec4 col = texture(albedo, UV) * color;
    ALBEDO = col.rgb;
}

void vertex() {
    //NORMAL = vec3(0.0,1.0,0.0);
    vec4 sway_dir_local = vec4(sway_dir,0.0) * WORLD_MATRIX;
    vec3 world_vertex = (WORLD_MATRIX * vec4(VERTEX,1.0)).xyz;
    float current_wind = texture(sway_noise,normalize(sway_dir.xz) * (-TIME*sway_time_scale) + world_vertex.xz*vec2(sway_noise_sampeling_scale)).x;
    VERTEX += normalize(sway_dir_local.xyz) * sway  * sclamp(current_wind,1.5);
}"
